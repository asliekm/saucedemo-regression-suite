name: Saucedemo Regression CI Pipeline

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build and test with Maven
        run: mvn clean test

      # Debug: Check what was generated
      - name: Debug - Check Generated Files
        run: |
          echo "=== Checking target directory ==="
          ls -la target/ || echo "No target directory"
          
          echo "=== Checking allure-results ==="
          if [ -d "target/allure-results" ]; then
            ls -la target/allure-results/
            echo "File count: $(find target/allure-results -name '*.json' | wc -l) JSON files"
            find target/allure-results -name '*.json' -exec echo "Found: {}" \;
          else
            echo "No allure-results directory"
          fi
          
          echo "=== Checking surefire-reports ==="
          if [ -d "target/surefire-reports" ]; then
            ls -la target/surefire-reports/
          else
            echo "No surefire-reports directory"
          fi

      - name: Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.24.0/allure-2.24.0.tgz
          tar -xvzf allure-2.24.0.tgz
          sudo mv allure-2.24.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          allure --version

      - name: Generate Allure Report
        run: |
          echo "=== Generating Allure Report ==="
          if [ -d "target/allure-results" ]; then
            allure generate target/allure-results -o target/allure-report --clean
            echo "=== Report generated, checking contents ==="
            ls -la target/allure-report/
            echo "=== Checking for index.html ==="
            if [ -f "target/allure-report/index.html" ]; then
              echo "‚úÖ index.html found"
              echo "File size: $(stat -c%s target/allure-report/index.html) bytes"
            else
              echo "‚ùå index.html not found"
            fi
          else
            echo "‚ùå No allure-results directory found"
            # Create empty report structure as fallback
            mkdir -p target/allure-report
            echo "<html><body><h1>No test results found</h1></body></html>" > target/allure-report/index.html
          fi

      # Upload multiple artifacts separately
      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report
          path: target/allure-report/
          retention-days: 30

      - name: Upload Allure Results (Raw)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results
          path: target/allure-results/
          retention-days: 30

      - name: Upload Surefire Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: surefire-reports
          path: target/surefire-reports/
          retention-days: 30

      # Create a summary report
      - name: Create Test Summary
        if: always()
        run: |
          mkdir -p target/summary
          cat > target/summary/test-summary.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Test Results Summary</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  .container { max-width: 800px; margin: 0 auto; }
                  .report-link { 
                      display: inline-block; 
                      padding: 10px 20px; 
                      background: #007cba; 
                      color: white; 
                      text-decoration: none; 
                      border-radius: 5px; 
                      margin: 10px 0;
                  }
                  .info { background: #f0f0f0; padding: 15px; border-radius: 5px; margin: 10px 0; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>Saucedemo Test Results</h1>
                  <div class="info">
                      <h3>Available Reports:</h3>
                      <p>üìä <strong>Allure Report:</strong> Open index.html from allure-report artifact</p>
                      <p>üìã <strong>Surefire Reports:</strong> Basic test results in XML format</p>
                      <p>üîß <strong>Raw Results:</strong> Allure JSON files for debugging</p>
                  </div>
                  <div class="info">
                      <h3>How to View Reports:</h3>
                      <ol>
                          <li>Download the allure-report artifact</li>
                          <li>Extract the ZIP file</li>
                          <li>Open index.html in your browser</li>
                      </ol>
                  </div>
                  <div class="info">
                      <h3>Pipeline Information:</h3>
                      <p>üïí Run Time: $(date)</p>
                      <p>üîó Commit: ${{ github.sha }}</p>
                      <p>üåø Branch: ${{ github.ref_name }}</p>
                  </div>
              </div>
          </body>
          </html>
          EOF

      - name: Upload Test Summary
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-summary
          path: target/summary/
          retention-days: 30
